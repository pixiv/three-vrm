/*! (c) 2020-2024 pixiv Inc. - https://github.com/pixiv/three-vrm/blob/release/LICENSE */
import*as e from"three";function o(e,o,i,t){return new(i||(i=Promise))((function(r,n){function l(e){try{a(t.next(e))}catch(e){n(e)}}function s(e){try{a(t.throw(e))}catch(e){n(e)}}function a(e){var o;e.done?r(e.value):(o=e.value,o instanceof i?o:new i((function(e){e(o)}))).then(l,s)}a((t=t.apply(e,o||[])).next())}))}function i(e){return Math.pow(e,2.2)}"function"==typeof SuppressedError&&SuppressedError;class t{get name(){return"VRMMaterialsV0CompatPlugin"}constructor(e){var o;this.parser=e,this._renderQueueMapTransparent=new Map,this._renderQueueMapTransparentZWrite=new Map;const i=this.parser.json;i.extensionsUsed=null!==(o=i.extensionsUsed)&&void 0!==o?o:[],-1===i.extensionsUsed.indexOf("KHR_texture_transform")&&i.extensionsUsed.push("KHR_texture_transform")}beforeRoot(){var e;return o(this,void 0,void 0,(function*(){const o=this.parser.json,i=null===(e=o.extensions)||void 0===e?void 0:e.VRM,t=null==i?void 0:i.materialProperties;t&&(this._populateRenderQueueMap(t),t.forEach(((e,i)=>{var t,r;const n=null===(t=o.materials)||void 0===t?void 0:t[i];if(null!=n)if("VRM/MToon"===e.shader){const t=this._parseV0MToonProperties(e,n);o.materials[i]=t}else if(null===(r=e.shader)||void 0===r?void 0:r.startsWith("VRM/Unlit")){const t=this._parseV0UnlitProperties(e,n);o.materials[i]=t}else"VRM_USE_GLTFSHADER"===e.shader||console.warn(`VRMMaterialsV0CompatPlugin: Unknown shader: ${e.shader}`);else console.warn(`VRMMaterialsV0CompatPlugin: Attempt to use materials[${i}] of glTF but the material doesn't exist`)})))}))}_parseV0MToonProperties(o,t){var r,n,l,s,a,u,d,v,p,c,h,m,_,f,M,x,P,T,R,g,C,V,O,b,A,S,F,w,y,E,U,W,L,Q,j,N,Z,H,k,B,z,D,q,K,$,I,X,Y,G,J,ee,oe,ie,te,re;const ne=null!==(n=null===(r=o.keywordMap)||void 0===r?void 0:r._ALPHABLEND_ON)&&void 0!==n&&n,le=1===(null===(l=o.floatProperties)||void 0===l?void 0:l._ZWrite)&&ne,se=this._v0ParseRenderQueue(o),ae=null!==(a=null===(s=o.keywordMap)||void 0===s?void 0:s._ALPHATEST_ON)&&void 0!==a&&a,ue=ne?"BLEND":ae?"MASK":"OPAQUE",de=ae?null!==(d=null===(u=o.floatProperties)||void 0===u?void 0:u._Cutoff)&&void 0!==d?d:.5:void 0,ve=0===(null!==(p=null===(v=o.floatProperties)||void 0===v?void 0:v._CullMode)&&void 0!==p?p:2),pe=this._portTextureTransform(o),ce=(null!==(h=null===(c=o.vectorProperties)||void 0===c?void 0:c._Color)&&void 0!==h?h:[1,1,1,1]).map(((e,o)=>3===o?e:i(e))),he=null===(m=o.textureProperties)||void 0===m?void 0:m._MainTex,me=null!=he?{index:he,extensions:Object.assign({},pe)}:void 0,_e=null!==(f=null===(_=o.floatProperties)||void 0===_?void 0:_._BumpScale)&&void 0!==f?f:1,fe=null===(M=o.textureProperties)||void 0===M?void 0:M._BumpMap,Me=null!=fe?{index:fe,scale:_e,extensions:Object.assign({},pe)}:void 0,xe=(null!==(P=null===(x=o.vectorProperties)||void 0===x?void 0:x._EmissionColor)&&void 0!==P?P:[0,0,0,1]).map(i),Pe=null===(T=o.textureProperties)||void 0===T?void 0:T._EmissionMap,Te=null!=Pe?{index:Pe,extensions:Object.assign({},pe)}:void 0,Re=(null!==(g=null===(R=o.vectorProperties)||void 0===R?void 0:R._ShadeColor)&&void 0!==g?g:[.97,.81,.86,1]).map(i),ge=null===(C=o.textureProperties)||void 0===C?void 0:C._ShadeTexture,Ce=null!=ge?{index:ge,extensions:Object.assign({},pe)}:void 0;let Ve=null!==(O=null===(V=o.floatProperties)||void 0===V?void 0:V._ShadeShift)&&void 0!==O?O:0,Oe=null!==(A=null===(b=o.floatProperties)||void 0===b?void 0:b._ShadeToony)&&void 0!==A?A:.9;Oe=e.MathUtils.lerp(Oe,1,.5+.5*Ve),Ve=-Ve-(1-Oe);const be=null!==(F=null===(S=o.floatProperties)||void 0===S?void 0:S._IndirectLightIntensity)&&void 0!==F?F:.1,Ae=be?1-be:void 0,Se=null===(w=o.textureProperties)||void 0===w?void 0:w._SphereAdd,Fe=null!=Se?[1,1,1]:void 0,we=null!=Se?{index:Se}:void 0,ye=null!==(E=null===(y=o.floatProperties)||void 0===y?void 0:y._RimLightingMix)&&void 0!==E?E:0,Ee=null===(U=o.textureProperties)||void 0===U?void 0:U._RimTexture,Ue=null!=Ee?{index:Ee,extensions:Object.assign({},pe)}:void 0,We=(null!==(L=null===(W=o.vectorProperties)||void 0===W?void 0:W._RimColor)&&void 0!==L?L:[0,0,0,1]).map(i),Le=null!==(j=null===(Q=o.floatProperties)||void 0===Q?void 0:Q._RimFresnelPower)&&void 0!==j?j:1,Qe=null!==(Z=null===(N=o.floatProperties)||void 0===N?void 0:N._RimLift)&&void 0!==Z?Z:0,je=["none","worldCoordinates","screenCoordinates"][null!==(k=null===(H=o.floatProperties)||void 0===H?void 0:H._OutlineWidthMode)&&void 0!==k?k:0];let Ne=null!==(z=null===(B=o.floatProperties)||void 0===B?void 0:B._OutlineWidth)&&void 0!==z?z:0;Ne*=.01;const Ze=null===(D=o.textureProperties)||void 0===D?void 0:D._OutlineWidthTexture,He=null!=Ze?{index:Ze,extensions:Object.assign({},pe)}:void 0,ke=(null!==(K=null===(q=o.vectorProperties)||void 0===q?void 0:q._OutlineColor)&&void 0!==K?K:[0,0,0]).map(i),Be=1===(null!==(I=null===($=o.floatProperties)||void 0===$?void 0:$._OutlineColorMode)&&void 0!==I?I:0)?null!==(Y=null===(X=o.floatProperties)||void 0===X?void 0:X._OutlineLightingMix)&&void 0!==Y?Y:1:0,ze=null===(G=o.textureProperties)||void 0===G?void 0:G._UvAnimMaskTexture,De=null!=ze?{index:ze,extensions:Object.assign({},pe)}:void 0,qe=null!==(ee=null===(J=o.floatProperties)||void 0===J?void 0:J._UvAnimScrollX)&&void 0!==ee?ee:0;let Ke=null!==(ie=null===(oe=o.floatProperties)||void 0===oe?void 0:oe._UvAnimScrollY)&&void 0!==ie?ie:0;null!=Ke&&(Ke=-Ke);const $e={specVersion:"1.0",transparentWithZWrite:le,renderQueueOffsetNumber:se,shadeColorFactor:Re,shadeMultiplyTexture:Ce,shadingShiftFactor:Ve,shadingToonyFactor:Oe,giEqualizationFactor:Ae,matcapFactor:Fe,matcapTexture:we,rimLightingMixFactor:ye,rimMultiplyTexture:Ue,parametricRimColorFactor:We,parametricRimFresnelPowerFactor:Le,parametricRimLiftFactor:Qe,outlineWidthMode:je,outlineWidthFactor:Ne,outlineWidthMultiplyTexture:He,outlineColorFactor:ke,outlineLightingMixFactor:Be,uvAnimationMaskTexture:De,uvAnimationScrollXSpeedFactor:qe,uvAnimationScrollYSpeedFactor:Ke,uvAnimationRotationSpeedFactor:null!==(re=null===(te=o.floatProperties)||void 0===te?void 0:te._UvAnimRotation)&&void 0!==re?re:0};return Object.assign(Object.assign({},t),{pbrMetallicRoughness:{baseColorFactor:ce,baseColorTexture:me},normalTexture:Me,emissiveTexture:Te,emissiveFactor:xe,alphaMode:ue,alphaCutoff:de,doubleSided:ve,extensions:{VRMC_materials_mtoon:$e}})}_parseV0UnlitProperties(e,o){var t,r,n,l,s;const a="VRM/UnlitTransparentZWrite"===e.shader,u="VRM/UnlitTransparent"===e.shader||a,d=this._v0ParseRenderQueue(e),v="VRM/UnlitCutout"===e.shader,p=u?"BLEND":v?"MASK":"OPAQUE",c=v?null!==(r=null===(t=e.floatProperties)||void 0===t?void 0:t._Cutoff)&&void 0!==r?r:.5:void 0,h=this._portTextureTransform(e),m=(null!==(l=null===(n=e.vectorProperties)||void 0===n?void 0:n._Color)&&void 0!==l?l:[1,1,1,1]).map(i),_=null===(s=e.textureProperties)||void 0===s?void 0:s._MainTex,f=null!=_?{index:_,extensions:Object.assign({},h)}:void 0,M={specVersion:"1.0",transparentWithZWrite:a,renderQueueOffsetNumber:d,shadeColorFactor:m,shadeMultiplyTexture:f};return Object.assign(Object.assign({},o),{pbrMetallicRoughness:{baseColorFactor:m,baseColorTexture:f},alphaMode:p,alphaCutoff:c,extensions:{VRMC_materials_mtoon:M}})}_portTextureTransform(e){var o,i,t,r,n;const l=null===(o=e.vectorProperties)||void 0===o?void 0:o._MainTex;if(null==l)return{};const s=[null!==(i=null==l?void 0:l[0])&&void 0!==i?i:0,null!==(t=null==l?void 0:l[1])&&void 0!==t?t:0],a=[null!==(r=null==l?void 0:l[2])&&void 0!==r?r:1,null!==(n=null==l?void 0:l[3])&&void 0!==n?n:1];return s[1]=1-a[1]-s[1],{KHR_texture_transform:{offset:s,scale:a}}}_v0ParseRenderQueue(e){var o,i,t;const r=null!==(i=null===(o=e.keywordMap)||void 0===o?void 0:o._ALPHABLEND_ON)&&void 0!==i&&i,n=1===(null===(t=e.floatProperties)||void 0===t?void 0:t._ZWrite);let l=0;if(r){const o=e.renderQueue;null!=o&&(l=n?this._renderQueueMapTransparentZWrite.get(o):this._renderQueueMapTransparent.get(o))}return l}_populateRenderQueueMap(e){const o=new Set,i=new Set;e.forEach((e=>{var t,r,n;const l=null!==(r=null===(t=e.keywordMap)||void 0===t?void 0:t._ALPHABLEND_ON)&&void 0!==r&&r,s=1===(null===(n=e.floatProperties)||void 0===n?void 0:n._ZWrite);if(l){const t=e.renderQueue;null!=t&&(s?i.add(t):o.add(t))}})),o.size>10&&console.warn(`VRMMaterialsV0CompatPlugin: This VRM uses ${o.size} render queues for Transparent materials while VRM 1.0 only supports up to 10 render queues. The model might not be rendered correctly.`),i.size>10&&console.warn(`VRMMaterialsV0CompatPlugin: This VRM uses ${i.size} render queues for TransparentZWrite materials while VRM 1.0 only supports up to 10 render queues. The model might not be rendered correctly.`),Array.from(o).sort().forEach(((e,i)=>{const t=Math.min(Math.max(i-o.size+1,-9),0);this._renderQueueMapTransparent.set(e,t)})),Array.from(i).sort().forEach(((e,o)=>{const i=Math.min(Math.max(o,0),9);this._renderQueueMapTransparentZWrite.set(e,i)}))}}export{t as VRMMaterialsV0CompatPlugin};
