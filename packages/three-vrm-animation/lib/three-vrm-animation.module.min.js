/*! (c) 2023-2024 pixiv Inc. - https://github.com/pixiv/three-vrm/blob/release/LICENSE */
import*as t from"three";
/*!
 * @pixiv/three-vrm-core v2.1.1
 * The implementation of core features of VRM, for @pixiv/three-vrm
 *
 * Copyright (c) 2020-2024 pixiv Inc.
 * @pixiv/three-vrm-core is distributed under MIT License
 * https://github.com/pixiv/three-vrm/blob/release/LICENSE
 */"function"==typeof SuppressedError&&SuppressedError;new t.Color,new t.Vector2,new t.Vector3,new t.Vector3,new t.Quaternion;const e={hips:null,spine:"hips",chest:"spine",upperChest:"chest",neck:"upperChest",head:"neck",leftEye:"head",rightEye:"head",jaw:"head",leftUpperLeg:"hips",leftLowerLeg:"leftUpperLeg",leftFoot:"leftLowerLeg",leftToes:"leftFoot",rightUpperLeg:"hips",rightLowerLeg:"rightUpperLeg",rightFoot:"rightLowerLeg",rightToes:"rightFoot",leftShoulder:"upperChest",leftUpperArm:"leftShoulder",leftLowerArm:"leftUpperArm",leftHand:"leftLowerArm",rightShoulder:"upperChest",rightUpperArm:"rightShoulder",rightLowerArm:"rightUpperArm",rightHand:"rightLowerArm",leftThumbMetacarpal:"leftHand",leftThumbProximal:"leftThumbMetacarpal",leftThumbDistal:"leftThumbProximal",leftIndexProximal:"leftHand",leftIndexIntermediate:"leftIndexProximal",leftIndexDistal:"leftIndexIntermediate",leftMiddleProximal:"leftHand",leftMiddleIntermediate:"leftMiddleProximal",leftMiddleDistal:"leftMiddleIntermediate",leftRingProximal:"leftHand",leftRingIntermediate:"leftRingProximal",leftRingDistal:"leftRingIntermediate",leftLittleProximal:"leftHand",leftLittleIntermediate:"leftLittleProximal",leftLittleDistal:"leftLittleIntermediate",rightThumbMetacarpal:"rightHand",rightThumbProximal:"rightThumbMetacarpal",rightThumbDistal:"rightThumbProximal",rightIndexProximal:"rightHand",rightIndexIntermediate:"rightIndexProximal",rightIndexDistal:"rightIndexIntermediate",rightMiddleProximal:"rightHand",rightMiddleIntermediate:"rightMiddleProximal",rightMiddleDistal:"rightMiddleIntermediate",rightRingProximal:"rightHand",rightRingIntermediate:"rightRingProximal",rightRingDistal:"rightRingIntermediate",rightLittleProximal:"rightHand",rightLittleIntermediate:"rightLittleProximal",rightLittleDistal:"rightLittleIntermediate"};new t.Vector3,new t.Quaternion,new t.Vector3,new t.Quaternion,new t.Vector3,new t.Quaternion,new t.Quaternion,new t.Vector3,new t.Vector3;const n=Math.sqrt(2)/2;new t.Quaternion(0,0,-n,n),new t.Vector3(0,1,0);const o=new t.Vector3,r=new t.Vector3;function i(t){return[Math.atan2(-t.z,t.x),Math.atan2(t.y,Math.sqrt(t.x*t.x+t.z*t.z))]}function a(t){const e=Math.round(t/2/Math.PI);return t-2*Math.PI*e}const s=new t.Vector3(0,0,1),l=new t.Vector3,h=new t.Vector3,u=new t.Vector3,d=new t.Quaternion,c=new t.Quaternion,p=new t.Quaternion,m=new t.Quaternion,f=new t.Euler;class g{get yaw(){return this._yaw}set yaw(t){this._yaw=t,this._needsUpdate=!0}get pitch(){return this._pitch}set pitch(t){this._pitch=t,this._needsUpdate=!0}get euler(){return console.warn("VRMLookAt: euler is deprecated. use getEuler() instead."),this.getEuler(new t.Euler)}constructor(e,n){this.offsetFromHeadBone=new t.Vector3,this.autoUpdate=!0,this.faceFront=new t.Vector3(0,0,1),this.humanoid=e,this.applier=n,this._yaw=0,this._pitch=0,this._needsUpdate=!0,this._restHeadWorldQuaternion=this.getLookAtWorldQuaternion(new t.Quaternion)}getEuler(e){return e.set(t.MathUtils.DEG2RAD*this._pitch,t.MathUtils.DEG2RAD*this._yaw,0,"YXZ")}copy(t){if(this.humanoid!==t.humanoid)throw new Error("VRMLookAt: humanoid must be same in order to copy");return this.offsetFromHeadBone.copy(t.offsetFromHeadBone),this.applier=t.applier,this.autoUpdate=t.autoUpdate,this.target=t.target,this.faceFront.copy(t.faceFront),this}clone(){return new g(this.humanoid,this.applier).copy(this)}reset(){this._yaw=0,this._pitch=0,this._needsUpdate=!0}getLookAtWorldPosition(t){const e=this.humanoid.getRawBoneNode("head");return t.copy(this.offsetFromHeadBone).applyMatrix4(e.matrixWorld)}getLookAtWorldQuaternion(t){const e=this.humanoid.getRawBoneNode("head");return n=t,e.matrixWorld.decompose(o,n,r),n;var n}getFaceFrontQuaternion(t){if(this.faceFront.distanceToSquared(s)<.01)return t.copy(this._restHeadWorldQuaternion).invert();const[e,n]=i(this.faceFront);return f.set(0,.5*Math.PI+e,n,"YZX"),t.setFromEuler(f).premultiply(m.copy(this._restHeadWorldQuaternion).invert())}getLookAtWorldDirection(t){return this.getLookAtWorldQuaternion(c),this.getFaceFrontQuaternion(p),t.copy(s).applyQuaternion(c).applyQuaternion(p).applyEuler(this.getEuler(f))}lookAt(e){const n=d.copy(this._restHeadWorldQuaternion).multiply(((o=this.getLookAtWorldQuaternion(c)).invert?o.invert():o.inverse(),o));var o;const r=this.getLookAtWorldPosition(h),s=u.copy(e).sub(r).applyQuaternion(n).normalize(),[l,p]=i(this.faceFront),[m,f]=i(s),g=a(m-l),w=a(p-f);this._yaw=t.MathUtils.RAD2DEG*g,this._pitch=t.MathUtils.RAD2DEG*w,this._needsUpdate=!0}update(t){null!=this.target&&this.autoUpdate&&this.lookAt(this.target.getWorldPosition(l)),this._needsUpdate&&(this._needsUpdate=!1,this.applier.applyYawPitch(this._yaw,this._pitch))}}g.EULER_ORDER="YXZ",new t.Vector3(0,0,1),new t.Quaternion,new t.Quaternion,new t.Euler(0,0,0,"YXZ");const w=180/Math.PI,x=new t.Euler;class y extends t.Object3D{constructor(t){super(),this.vrmLookAt=t,this.type="VRMLookAtQuaternionProxy";const e=this.rotation._onChangeCallback;this.rotation._onChange((()=>{e(),this._applyToLookAt()}));const n=this.quaternion._onChangeCallback;this.quaternion._onChange((()=>{n(),this._applyToLookAt()}))}_applyToLookAt(){x.setFromQuaternion(this.quaternion,g.EULER_ORDER),this.vrmLookAt.yaw=w*x.y,this.vrmLookAt.pitch=w*x.x}}function k(e,n,o){var r,i;const a=new Map,s=new Map;for(const[i,a]of e.humanoidTracks.rotation.entries()){const e=null===(r=n.getNormalizedBoneNode(i))||void 0===r?void 0:r.name;if(null!=e){const n=new t.QuaternionKeyframeTrack(`${e}.quaternion`,a.times,a.values.map(((t,e)=>"0"===o&&e%2==0?-t:t)));s.set(i,n)}}for(const[t,r]of e.humanoidTracks.translation.entries()){const s=null===(i=n.getNormalizedBoneNode(t))||void 0===i?void 0:i.name;if(null!=s){const i=e.restHipsPosition.y,l=n.normalizedRestPose.hips.position[1]/i,h=r.clone();h.values=h.values.map(((t,e)=>("0"===o&&e%3!=1?-t:t)*l)),h.name=`${s}.position`,a.set(t,h)}}return{translation:a,rotation:s}}function v(t,e){const n=new Map,o=new Map;for(const[o,r]of t.expressionTracks.preset.entries()){const t=e.getExpressionTrackName(o);if(null!=t){const e=r.clone();e.name=t,n.set(o,e)}}for(const[n,r]of t.expressionTracks.custom.entries()){const t=e.getExpressionTrackName(n);if(null!=t){const e=r.clone();e.name=t,o.set(n,e)}}return{preset:n,custom:o}}function M(t,e){if(null==t.lookAtTrack)return null;const n=t.lookAtTrack.clone();return n.name=e,n}function A(e,n){const o=[],r=k(e,n.humanoid,n.meta.metaVersion);if(o.push(...r.translation.values()),o.push(...r.rotation.values()),null!=n.expressionManager){const t=v(e,n.expressionManager);o.push(...t.preset.values()),o.push(...t.custom.values())}if(null!=n.lookAt){let t=n.scene.children.find((t=>t instanceof y));null==t?(console.warn("createVRMAnimationClip: VRMLookAtQuaternionProxy is not found. Creating a new one automatically. To suppress this warning, create a VRMLookAtQuaternionProxy manually"),t=new y(n.lookAt),t.name="VRMLookAtQuaternionProxy",n.scene.add(t)):null==t.name&&(console.warn("createVRMAnimationClip: VRMLookAtQuaternionProxy is found but its name is not set. Setting the name automatically. To suppress this warning, set the name manually"),t.name="VRMLookAtQuaternionProxy");const r=M(e,`${t.name}.quaternion`);null!=r&&o.push(r)}return new t.AnimationClip("Clip",e.duration,o)}class L{constructor(){this.duration=0,this.restHipsPosition=new t.Vector3,this.humanoidTracks={translation:new Map,rotation:new Map},this.expressionTracks={preset:new Map,custom:new Map},this.lookAtTrack=null}}function _(t,e,n,o){return new(n||(n=Promise))((function(r,i){function a(t){try{l(o.next(t))}catch(t){i(t)}}function s(t){try{l(o.throw(t))}catch(t){i(t)}}function l(t){var e;t.done?r(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(a,s)}l((o=o.apply(t,e||[])).next())}))}function P(t,e){const n=t.length,o=[];let r=[],i=0;for(let a=0;a<n;a++){const n=t[a];i<=0&&(i=e,r=[],o.push(r)),r.push(n),i--}return o}"function"==typeof SuppressedError&&SuppressedError;const R=new t.Matrix4,T=new t.Vector3,I=new t.Quaternion,V=new t.Quaternion,E=new t.Quaternion,Q=new Set(["1.0","1.0-draft"]),U=new Set(Object.values({Aa:"aa",Ih:"ih",Ou:"ou",Ee:"ee",Oh:"oh",Blink:"blink",Happy:"happy",Angry:"angry",Sad:"sad",Relaxed:"relaxed",LookUp:"lookUp",Surprised:"surprised",LookDown:"lookDown",LookLeft:"lookLeft",LookRight:"lookRight",BlinkLeft:"blinkLeft",BlinkRight:"blinkRight",Neutral:"neutral"}));class b{constructor(t){this.parser=t}get name(){return"VRMC_vrm_animation"}afterRoot(e){var n,o,r;return _(this,void 0,void 0,(function*(){const i=e.parser.json,a=i.extensionsUsed;if(null==a||-1==a.indexOf(this.name))return;const s=null===(n=i.extensions)||void 0===n?void 0:n[this.name];if(null==s)return;const l=s.specVersion;if(!Q.has(l))return void console.warn(`VRMAnimationLoaderPlugin: Unknown VRMC_vrm_animation spec version: ${l}`);"1.0-draft"===l&&console.warn("VRMAnimationLoaderPlugin: Using a draft spec version: 1.0-draft. Some behaviors may be different. Consider updating the animation file.");const h=this._createNodeMap(s),u=yield this._createBoneWorldMatrixMap(e,s),d=null===(r=null===(o=s.humanoid)||void 0===o?void 0:o.humanBones.hips)||void 0===r?void 0:r.node,c=null!=d?yield e.parser.getDependency("node",d):null,p=new t.Vector3;null==c||c.getWorldPosition(p);const m=e.animations.map(((t,e)=>{const n=i.animations[e],o=this._parseAnimation(t,n,h,u);return o.restHipsPosition=p,o}));e.userData.vrmAnimations=m}))}_createNodeMap(t){var e,n,o,r,i;const a=new Map,s=new Map,l=null===(e=t.humanoid)||void 0===e?void 0:e.humanBones;l&&Object.entries(l).forEach((([t,e])=>{const n=null==e?void 0:e.node;null!=n&&a.set(n,t)}));const h=null===(n=t.expressions)||void 0===n?void 0:n.preset;h&&Object.entries(h).forEach((([t,e])=>{const n=null==e?void 0:e.node;null!=n&&s.set(n,t)}));const u=null===(o=t.expressions)||void 0===o?void 0:o.custom;u&&Object.entries(u).forEach((([t,e])=>{const{node:n}=e;s.set(n,t)}));const d=null!==(i=null===(r=t.lookAt)||void 0===r?void 0:r.node)&&void 0!==i?i:null;return{humanoidIndexToName:a,expressionsIndexToName:s,lookAtIndex:d}}_createBoneWorldMatrixMap(t,e){var n,o;return _(this,void 0,void 0,(function*(){t.scene.updateWorldMatrix(!1,!0);const r=yield t.parser.getDependencies("node"),i=new Map;if(null==e.humanoid)return i;for(const[t,a]of Object.entries(e.humanoid.humanBones)){const e=null==a?void 0:a.node;if(null!=e){const a=r[e];i.set(t,a.matrixWorld),"hips"===t&&i.set("hipsParent",null!==(o=null===(n=a.parent)||void 0===n?void 0:n.matrixWorld)&&void 0!==o?o:R)}}return i}))}_parseAnimation(n,o,r,i){const a=n.tracks,s=o.channels,l=new L;return l.duration=n.duration,s.forEach(((n,o)=>{const{node:s,path:h}=n.target,u=a[o];if(null==s)return;const d=r.humanoidIndexToName.get(s);if(null!=d){let t=e[d];for(;null!=t&&null==i.get(t);)t=e[t];if(null!=t||(t="hipsParent"),"translation"===h)if("hips"!==d)console.warn(`The loading animation contains a translation track for ${d}, which is not permitted in the VRMC_vrm_animation spec. ignoring the track`);else{const t=i.get("hipsParent"),e=P(u.values,3).flatMap((e=>T.fromArray(e).applyMatrix4(t).toArray())),n=u.clone();n.values=new Float32Array(e),l.humanoidTracks.translation.set(d,n)}else{if("rotation"!==h)throw new Error(`Invalid path "${h}"`);{const e=i.get(d),n=i.get(t);e.decompose(T,I,T),I.invert(),n.decompose(T,V,T);const o=P(u.values,4).flatMap((t=>E.fromArray(t).premultiply(V).multiply(I).toArray())),r=u.clone();r.values=new Float32Array(o),l.humanoidTracks.rotation.set(d,r)}}return}const c=r.expressionsIndexToName.get(s);if(null==c){if(s===r.lookAtIndex){if("rotation"!==h)throw new Error(`Invalid path "${h}"`);l.lookAtTrack=u}}else{if("translation"!==h)throw new Error(`Invalid path "${h}"`);{const e=u.times,n=new Float32Array(u.values.length/3);for(let t=0;t<n.length;t++)n[t]=u.values[3*t];const o=new t.NumberKeyframeTrack(`${c}.weight`,e,n);U.has(c)?l.expressionTracks.preset.set(c,o):l.expressionTracks.custom.set(c,o)}}})),l}}export{L as VRMAnimation,b as VRMAnimationLoaderPlugin,y as VRMLookAtQuaternionProxy,A as createVRMAnimationClip,v as createVRMAnimationExpressionTracks,k as createVRMAnimationHumanoidTracks,M as createVRMAnimationLookAtTrack};
