/*! (c) 2023-2024 pixiv Inc. - https://github.com/pixiv/three-vrm/blob/release/LICENSE */
!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("three")):"function"==typeof define&&define.amd?define(["exports","three"],t):t((e="undefined"!=typeof globalThis?globalThis:e||self).THREE_VRM_ANIMATION={},e.THREE)}(this,(function(e,t){"use strict";function n(e){if(e&&e.__esModule)return e;var t=Object.create(null);return e&&Object.keys(e).forEach((function(n){if("default"!==n){var o=Object.getOwnPropertyDescriptor(e,n);Object.defineProperty(t,n,o.get?o:{enumerable:!0,get:function(){return e[n]}})}})),t.default=e,Object.freeze(t)}var o=n(t);
/*!
     * @pixiv/three-vrm-core v2.1.1
     * The implementation of core features of VRM, for @pixiv/three-vrm
     *
     * Copyright (c) 2020-2024 pixiv Inc.
     * @pixiv/three-vrm-core is distributed under MIT License
     * https://github.com/pixiv/three-vrm/blob/release/LICENSE
     */"function"==typeof SuppressedError&&SuppressedError;new o.Color,new o.Vector2,new o.Vector3,new o.Vector3,new o.Quaternion;const r={hips:null,spine:"hips",chest:"spine",upperChest:"chest",neck:"upperChest",head:"neck",leftEye:"head",rightEye:"head",jaw:"head",leftUpperLeg:"hips",leftLowerLeg:"leftUpperLeg",leftFoot:"leftLowerLeg",leftToes:"leftFoot",rightUpperLeg:"hips",rightLowerLeg:"rightUpperLeg",rightFoot:"rightLowerLeg",rightToes:"rightFoot",leftShoulder:"upperChest",leftUpperArm:"leftShoulder",leftLowerArm:"leftUpperArm",leftHand:"leftLowerArm",rightShoulder:"upperChest",rightUpperArm:"rightShoulder",rightLowerArm:"rightUpperArm",rightHand:"rightLowerArm",leftThumbMetacarpal:"leftHand",leftThumbProximal:"leftThumbMetacarpal",leftThumbDistal:"leftThumbProximal",leftIndexProximal:"leftHand",leftIndexIntermediate:"leftIndexProximal",leftIndexDistal:"leftIndexIntermediate",leftMiddleProximal:"leftHand",leftMiddleIntermediate:"leftMiddleProximal",leftMiddleDistal:"leftMiddleIntermediate",leftRingProximal:"leftHand",leftRingIntermediate:"leftRingProximal",leftRingDistal:"leftRingIntermediate",leftLittleProximal:"leftHand",leftLittleIntermediate:"leftLittleProximal",leftLittleDistal:"leftLittleIntermediate",rightThumbMetacarpal:"rightHand",rightThumbProximal:"rightThumbMetacarpal",rightThumbDistal:"rightThumbProximal",rightIndexProximal:"rightHand",rightIndexIntermediate:"rightIndexProximal",rightIndexDistal:"rightIndexIntermediate",rightMiddleProximal:"rightHand",rightMiddleIntermediate:"rightMiddleProximal",rightMiddleDistal:"rightMiddleIntermediate",rightRingProximal:"rightHand",rightRingIntermediate:"rightRingProximal",rightRingDistal:"rightRingIntermediate",rightLittleProximal:"rightHand",rightLittleIntermediate:"rightLittleProximal",rightLittleDistal:"rightLittleIntermediate"};new o.Vector3,new o.Quaternion,new o.Vector3,new o.Quaternion,new o.Vector3,new o.Quaternion,new o.Quaternion,new o.Vector3,new o.Vector3;const i=Math.sqrt(2)/2;new o.Quaternion(0,0,-i,i),new o.Vector3(0,1,0);const a=new o.Vector3,s=new o.Vector3;function l(e){return[Math.atan2(-e.z,e.x),Math.atan2(e.y,Math.sqrt(e.x*e.x+e.z*e.z))]}function u(e){const t=Math.round(e/2/Math.PI);return e-2*Math.PI*t}const h=new o.Vector3(0,0,1),c=new o.Vector3,d=new o.Vector3,p=new o.Vector3,m=new o.Quaternion,f=new o.Quaternion,g=new o.Quaternion,w=new o.Quaternion,y=new o.Euler;class x{get yaw(){return this._yaw}set yaw(e){this._yaw=e,this._needsUpdate=!0}get pitch(){return this._pitch}set pitch(e){this._pitch=e,this._needsUpdate=!0}get euler(){return console.warn("VRMLookAt: euler is deprecated. use getEuler() instead."),this.getEuler(new o.Euler)}constructor(e,t){this.offsetFromHeadBone=new o.Vector3,this.autoUpdate=!0,this.faceFront=new o.Vector3(0,0,1),this.humanoid=e,this.applier=t,this._yaw=0,this._pitch=0,this._needsUpdate=!0,this._restHeadWorldQuaternion=this.getLookAtWorldQuaternion(new o.Quaternion)}getEuler(e){return e.set(o.MathUtils.DEG2RAD*this._pitch,o.MathUtils.DEG2RAD*this._yaw,0,"YXZ")}copy(e){if(this.humanoid!==e.humanoid)throw new Error("VRMLookAt: humanoid must be same in order to copy");return this.offsetFromHeadBone.copy(e.offsetFromHeadBone),this.applier=e.applier,this.autoUpdate=e.autoUpdate,this.target=e.target,this.faceFront.copy(e.faceFront),this}clone(){return new x(this.humanoid,this.applier).copy(this)}reset(){this._yaw=0,this._pitch=0,this._needsUpdate=!0}getLookAtWorldPosition(e){const t=this.humanoid.getRawBoneNode("head");return e.copy(this.offsetFromHeadBone).applyMatrix4(t.matrixWorld)}getLookAtWorldQuaternion(e){const t=this.humanoid.getRawBoneNode("head");return n=e,t.matrixWorld.decompose(a,n,s),n;var n}getFaceFrontQuaternion(e){if(this.faceFront.distanceToSquared(h)<.01)return e.copy(this._restHeadWorldQuaternion).invert();const[t,n]=l(this.faceFront);return y.set(0,.5*Math.PI+t,n,"YZX"),e.setFromEuler(y).premultiply(w.copy(this._restHeadWorldQuaternion).invert())}getLookAtWorldDirection(e){return this.getLookAtWorldQuaternion(f),this.getFaceFrontQuaternion(g),e.copy(h).applyQuaternion(f).applyQuaternion(g).applyEuler(this.getEuler(y))}lookAt(e){const t=m.copy(this._restHeadWorldQuaternion).multiply(((n=this.getLookAtWorldQuaternion(f)).invert?n.invert():n.inverse(),n));var n;const r=this.getLookAtWorldPosition(d),i=p.copy(e).sub(r).applyQuaternion(t).normalize(),[a,s]=l(this.faceFront),[h,c]=l(i),g=u(h-a),w=u(s-c);this._yaw=o.MathUtils.RAD2DEG*g,this._pitch=o.MathUtils.RAD2DEG*w,this._needsUpdate=!0}update(e){null!=this.target&&this.autoUpdate&&this.lookAt(this.target.getWorldPosition(c)),this._needsUpdate&&(this._needsUpdate=!1,this.applier.applyYawPitch(this._yaw,this._pitch))}}x.EULER_ORDER="YXZ",new o.Vector3(0,0,1),new o.Quaternion,new o.Quaternion,new o.Euler(0,0,0,"YXZ");const k=180/Math.PI,M=new o.Euler;class v extends o.Object3D{constructor(e){super(),this.vrmLookAt=e,this.type="VRMLookAtQuaternionProxy";const t=this.rotation._onChangeCallback;this.rotation._onChange((()=>{t(),this._applyToLookAt()}));const n=this.quaternion._onChangeCallback;this.quaternion._onChange((()=>{n(),this._applyToLookAt()}))}_applyToLookAt(){M.setFromQuaternion(this.quaternion,x.EULER_ORDER),this.vrmLookAt.yaw=k*M.y,this.vrmLookAt.pitch=k*M.x}}function A(e,t,n){var r,i;const a=new Map,s=new Map;for(const[i,a]of e.humanoidTracks.rotation.entries()){const e=null===(r=t.getNormalizedBoneNode(i))||void 0===r?void 0:r.name;if(null!=e){const t=new o.QuaternionKeyframeTrack(`${e}.quaternion`,a.times,a.values.map(((e,t)=>"0"===n&&t%2==0?-e:e)));s.set(i,t)}}for(const[o,r]of e.humanoidTracks.translation.entries()){const s=null===(i=t.getNormalizedBoneNode(o))||void 0===i?void 0:i.name;if(null!=s){const i=e.restHipsPosition.y,l=t.normalizedRestPose.hips.position[1]/i,u=r.clone();u.values=u.values.map(((e,t)=>("0"===n&&t%3!=1?-e:e)*l)),u.name=`${s}.position`,a.set(o,u)}}return{translation:a,rotation:s}}function L(e,t){const n=new Map,o=new Map;for(const[o,r]of e.expressionTracks.preset.entries()){const e=t.getExpressionTrackName(o);if(null!=e){const t=r.clone();t.name=e,n.set(o,t)}}for(const[n,r]of e.expressionTracks.custom.entries()){const e=t.getExpressionTrackName(n);if(null!=e){const t=r.clone();t.name=e,o.set(n,t)}}return{preset:n,custom:o}}function R(e,t){if(null==e.lookAtTrack)return null;const n=e.lookAtTrack.clone();return n.name=t,n}class _{constructor(){this.duration=0,this.restHipsPosition=new o.Vector3,this.humanoidTracks={translation:new Map,rotation:new Map},this.expressionTracks={preset:new Map,custom:new Map},this.lookAtTrack=null}}function P(e,t,n,o){return new(n||(n=Promise))((function(r,i){function a(e){try{l(o.next(e))}catch(e){i(e)}}function s(e){try{l(o.throw(e))}catch(e){i(e)}}function l(e){var t;e.done?r(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(a,s)}l((o=o.apply(e,t||[])).next())}))}function T(e,t){const n=e.length,o=[];let r=[],i=0;for(let a=0;a<n;a++){const n=e[a];i<=0&&(i=t,r=[],o.push(r)),r.push(n),i--}return o}"function"==typeof SuppressedError&&SuppressedError;const V=new o.Matrix4,E=new o.Vector3,I=new o.Quaternion,b=new o.Quaternion,Q=new o.Quaternion,U=new Set(["1.0","1.0-draft"]),D=new Set(Object.values({Aa:"aa",Ih:"ih",Ou:"ou",Ee:"ee",Oh:"oh",Blink:"blink",Happy:"happy",Angry:"angry",Sad:"sad",Relaxed:"relaxed",LookUp:"lookUp",Surprised:"surprised",LookDown:"lookDown",LookLeft:"lookLeft",LookRight:"lookRight",BlinkLeft:"blinkLeft",BlinkRight:"blinkRight",Neutral:"neutral"}));e.VRMAnimation=_,e.VRMAnimationLoaderPlugin=class{constructor(e){this.parser=e}get name(){return"VRMC_vrm_animation"}afterRoot(e){var t,n,r;return P(this,void 0,void 0,(function*(){const i=e.parser.json,a=i.extensionsUsed;if(null==a||-1==a.indexOf(this.name))return;const s=null===(t=i.extensions)||void 0===t?void 0:t[this.name];if(null==s)return;const l=s.specVersion;if(!U.has(l))return void console.warn(`VRMAnimationLoaderPlugin: Unknown VRMC_vrm_animation spec version: ${l}`);"1.0-draft"===l&&console.warn("VRMAnimationLoaderPlugin: Using a draft spec version: 1.0-draft. Some behaviors may be different. Consider updating the animation file.");const u=this._createNodeMap(s),h=yield this._createBoneWorldMatrixMap(e,s),c=null===(r=null===(n=s.humanoid)||void 0===n?void 0:n.humanBones.hips)||void 0===r?void 0:r.node,d=null!=c?yield e.parser.getDependency("node",c):null,p=new o.Vector3;null==d||d.getWorldPosition(p);const m=e.animations.map(((e,t)=>{const n=i.animations[t],o=this._parseAnimation(e,n,u,h);return o.restHipsPosition=p,o}));e.userData.vrmAnimations=m}))}_createNodeMap(e){var t,n,o,r,i;const a=new Map,s=new Map,l=null===(t=e.humanoid)||void 0===t?void 0:t.humanBones;l&&Object.entries(l).forEach((([e,t])=>{const n=null==t?void 0:t.node;null!=n&&a.set(n,e)}));const u=null===(n=e.expressions)||void 0===n?void 0:n.preset;u&&Object.entries(u).forEach((([e,t])=>{const n=null==t?void 0:t.node;null!=n&&s.set(n,e)}));const h=null===(o=e.expressions)||void 0===o?void 0:o.custom;h&&Object.entries(h).forEach((([e,t])=>{const{node:n}=t;s.set(n,e)}));const c=null!==(i=null===(r=e.lookAt)||void 0===r?void 0:r.node)&&void 0!==i?i:null;return{humanoidIndexToName:a,expressionsIndexToName:s,lookAtIndex:c}}_createBoneWorldMatrixMap(e,t){var n,o;return P(this,void 0,void 0,(function*(){e.scene.updateWorldMatrix(!1,!0);const r=yield e.parser.getDependencies("node"),i=new Map;if(null==t.humanoid)return i;for(const[e,a]of Object.entries(t.humanoid.humanBones)){const t=null==a?void 0:a.node;if(null!=t){const a=r[t];i.set(e,a.matrixWorld),"hips"===e&&i.set("hipsParent",null!==(o=null===(n=a.parent)||void 0===n?void 0:n.matrixWorld)&&void 0!==o?o:V)}}return i}))}_parseAnimation(e,t,n,i){const a=e.tracks,s=t.channels,l=new _;return l.duration=e.duration,s.forEach(((e,t)=>{const{node:s,path:u}=e.target,h=a[t];if(null==s)return;const c=n.humanoidIndexToName.get(s);if(null!=c){let e=r[c];for(;null!=e&&null==i.get(e);)e=r[e];if(null!=e||(e="hipsParent"),"translation"===u)if("hips"!==c)console.warn(`The loading animation contains a translation track for ${c}, which is not permitted in the VRMC_vrm_animation spec. ignoring the track`);else{const e=i.get("hipsParent"),t=T(h.values,3).flatMap((t=>E.fromArray(t).applyMatrix4(e).toArray())),n=h.clone();n.values=new Float32Array(t),l.humanoidTracks.translation.set(c,n)}else{if("rotation"!==u)throw new Error(`Invalid path "${u}"`);{const t=i.get(c),n=i.get(e);t.decompose(E,I,E),I.invert(),n.decompose(E,b,E);const o=T(h.values,4).flatMap((e=>Q.fromArray(e).premultiply(b).multiply(I).toArray())),r=h.clone();r.values=new Float32Array(o),l.humanoidTracks.rotation.set(c,r)}}return}const d=n.expressionsIndexToName.get(s);if(null==d){if(s===n.lookAtIndex){if("rotation"!==u)throw new Error(`Invalid path "${u}"`);l.lookAtTrack=h}}else{if("translation"!==u)throw new Error(`Invalid path "${u}"`);{const e=h.times,t=new Float32Array(h.values.length/3);for(let e=0;e<t.length;e++)t[e]=h.values[3*e];const n=new o.NumberKeyframeTrack(`${d}.weight`,e,t);D.has(d)?l.expressionTracks.preset.set(d,n):l.expressionTracks.custom.set(d,n)}}})),l}},e.VRMLookAtQuaternionProxy=v,e.createVRMAnimationClip=function(e,t){const n=[],r=A(e,t.humanoid,t.meta.metaVersion);if(n.push(...r.translation.values()),n.push(...r.rotation.values()),null!=t.expressionManager){const o=L(e,t.expressionManager);n.push(...o.preset.values()),n.push(...o.custom.values())}if(null!=t.lookAt){let o=t.scene.children.find((e=>e instanceof v));null==o?(console.warn("createVRMAnimationClip: VRMLookAtQuaternionProxy is not found. Creating a new one automatically. To suppress this warning, create a VRMLookAtQuaternionProxy manually"),o=new v(t.lookAt),o.name="VRMLookAtQuaternionProxy",t.scene.add(o)):null==o.name&&(console.warn("createVRMAnimationClip: VRMLookAtQuaternionProxy is found but its name is not set. Setting the name automatically. To suppress this warning, set the name manually"),o.name="VRMLookAtQuaternionProxy");const r=R(e,`${o.name}.quaternion`);null!=r&&n.push(r)}return new o.AnimationClip("Clip",e.duration,n)},e.createVRMAnimationExpressionTracks=L,e.createVRMAnimationHumanoidTracks=A,e.createVRMAnimationLookAtTrack=R,Object.defineProperty(e,"__esModule",{value:!0}),Object.assign(t,e)}));
